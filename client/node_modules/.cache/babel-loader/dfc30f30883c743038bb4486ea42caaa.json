{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\gbooks2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\gbooks2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\gbooks2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\gbooks2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\gbooks2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jacob\\\\Desktop\\\\gbooks2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Desktop\\\\gbooks2.0\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport resultsSeach from \"../components/Results-search\"; // import { Query } from \"mongoose\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\",\n      author: \"\",\n      synopsis: \"\",\n      search: \"\",\n      result: {}\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.seachGbooks = function (bookTitle) {\n      API.searchBooks(bookTitle).then(function (res) {\n        _this.setState({\n          result: res.data\n        }); // console.log(res.data)\n        // console.log(this.state.result.items);\n\n\n        _this.state.result.items.forEach(function (items) {// console.log(items.volumeInfo);\n          //for titles of book\n          // console.log(items.volumeInfo.title);\n          //for authers\n          // let info =items.volumeInfo.authors\n          // for (let i = 0; i < info.length; i++) {\n          //   console.log(info[i]);\n          // }\n          // discription\n          // console.log(items.volumeInfo.description);\n          // thumbnail\n          // console.log(items.volumeInfo.imageLinks.thumbnail);\n          // link to previewLink\n          // console.log(items.volumeInfo.previewLink);\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      // console.log(this.state);\n      event.preventDefault(); // this.setState()\n\n      _this.seachGbooks(_this.state.title);\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    // handleFormSubmit = event => {\n    //   event.preventDefault();\n    //   if (this.state.title && this.state.author) {\n    //     API.saveBook({\n    //       title: this.state.title,\n    //       author: this.state.author,\n    //       synopsis: this.state.synopsis\n    //     })\n    //       .then(res => this.loadBooks())\n    //       .catch(err => console.log(err));\n    //   }\n    // };\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.name,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.title,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Find Book\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Books On My List\")), this.state.books.length ? React.createElement(\"resultsSeach\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }) // <List>\n      //   {this.state.books.map(book => (\n      //     <ListItem key={book._id}>\n      //       <Link to={\"/books/\" + book._id}>\n      //         <strong>\n      //           {book.title} by {book.author}\n      //         </strong>\n      //       </Link>\n      //       <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n      //     </ListItem>\n      //   ))}\n      // </List>\n      : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["C:\\Users\\jacob\\Desktop\\gbooks2.0\\client\\src\\pages\\Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","FormBtn","resultsSeach","Books","state","books","title","author","synopsis","search","result","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","seachGbooks","bookTitle","searchBooks","items","forEach","handleFormSubmit","preventDefault","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input,  FormBtn } from \"../components/Form\";\nimport resultsSeach from \"../components/Results-search\"\n// import { Query } from \"mongoose\";\n\nclass Books extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    synopsis: \"\",\n    search:\"\",\n    result:{}\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  seachGbooks = bookTitle =>{\n    API.searchBooks(bookTitle)\n    .then(res=>{\n      this.setState({ result: res.data })\n      // console.log(res.data)\n      // console.log(this.state.result.items);\n      this.state.result.items.forEach(items => {\n        // console.log(items.volumeInfo);\n\n        //for titles of book\n        // console.log(items.volumeInfo.title);\n        //for authers\n        // let info =items.volumeInfo.authors\n        // for (let i = 0; i < info.length; i++) {\n        //   console.log(info[i]);\n        // }\n        // discription\n        // console.log(items.volumeInfo.description);\n        // thumbnail\n        // console.log(items.volumeInfo.imageLinks.thumbnail);\n        // link to previewLink\n        // console.log(items.volumeInfo.previewLink);\n\n\n        \n      });\n\n      \n    }).catch(err => console.log(err));\n  }\n\n  handleFormSubmit = event => {\n    // console.log(this.state);\n    \n    event.preventDefault();\n    // this.setState()\n    this.seachGbooks(this.state.title)\n    \n  };\n\n\n\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   if (this.state.title && this.state.author) {\n  //     API.saveBook({\n  //       title: this.state.title,\n  //       author: this.state.author,\n  //       synopsis: this.state.synopsis\n  //     })\n  //       .then(res => this.loadBooks())\n  //       .catch(err => console.log(err));\n  //   }\n  // };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.name}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n\n              />\n              <FormBtn\n                disabled={!(this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Find Book\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <resultsSeach/>\n              // <List>\n              //   {this.state.books.map(book => (\n              //     <ListItem key={book._id}>\n              //       <Link to={\"/books/\" + book._id}>\n              //         <strong>\n              //           {book.title} by {book.author}\n              //         </strong>\n              //       </Link>\n              //       <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n              //     </ListItem>\n              //   ))}\n              // </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}